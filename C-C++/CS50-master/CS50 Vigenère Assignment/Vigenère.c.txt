//Takes inputed keyword and applies shift for ciphered text
#include <cs50.h>
#include <stdio.h>
#include <ctype.h>
#include <string.h>

int shift(char c);
int main(int argc, string argv[])
{
    // Exit code. Checks for proper amount of command-line arguments
    if (argc != 2)
    {
        printf("Usage: /.vigenere keyword\n");
        return 1;
    }
    int keyLength = strlen(argv[1]);
    
    // Verifies that inputed command-line argument is an alphabetical character
    for (int i = 0; i < keyLength; i++)
    {
        if (!isalpha(argv[1][i]))
        {
            printf("Usage: /.vigenere keyword\n");
            return 1;
        }
    }
    
    // Takes user input
    string plainText = get_string("plaintext: ");
    int textLength = strlen(plainText);
    printf("ciphertext: ");
    
    // Applies shift to first letter, moves onto next letter + shift value, repeats
    for (int i = 0, j = 0; i < textLength; i++)
    {
        if (j == keyLength)
        {
            j = 0;
        }
        int key = shift(argv[1][j]);
        
        // Applies shift only if input is an alphabetical character
        if (isalpha(plainText[i]))
        {
            if (islower(plainText[i]))
            {
                printf("%c", ((((plainText[i] - 'a') + key) % 26) + 'a'));
            }
            else if (isupper(plainText[i]))
            {
                printf("%c", ((((plainText[i] - 'A') + key) % 26) + 'A'));
            }
            j++;
            
        }
        
        // If input is not an alphabetical character, print inputted text as-is
        else
        {
            printf("%c", plainText[i]);
        }
    }
    printf("\n");
}

// Function for applying shift value. Includes ASCII wraparound
int shift(char c)
{
    if (islower(c))
    {
        c -= 97;
    }
    else
    {
        c -= 65;
    }
    return c;
}