// Takes inputed key & uses it to convert plaintext to encrypted ciphertext
#include <cs50.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

int encryptValue(int k, string plainText);
int overflowCheck(char overflowCharacter, int lower, int higher);

int main(int argc, string argv[])
{
    // Exit code. If user does not input a key, the program stops
    if (argc < 2)
    {
        printf("Missing command-line argument\n");
        return 1;
    }
    else if (argc > 2)
    {
        printf("Too many command-line arguments\n");
        return 1;
    }
    int k = atoi(argv[1]);
    if (k < 1)
    {
        printf("That is not a valid key number. Input a number greater than 0.\n");
        return 1;
    }
    
    string plainText = get_string("plaintext: ");
    int length = strlen(plainText);
    printf("ciphertext: ");
    for (int i = 0; i < length; i++)
    {
        // Determines if specific character is in the alphabet
        if (isalpha(plainText[i]))
        {
            // Preserves casing of character
            if (islower(plainText[i]))
            {
                printf("%c", ((((plainText[i] - 'a') + k) % 26) + 'a'));
            }
            else
            {
                printf("%c", ((((plainText[i] - 'A') + k) % 26) + 'A'));
            }
        }
        // Prints out character or space if it is not in the alphabet
        else
        {
            printf("%c", plainText[i]);
        }
            
    }
    printf("\n");
    return 0;
}