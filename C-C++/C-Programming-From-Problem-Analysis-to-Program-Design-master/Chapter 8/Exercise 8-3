/*
Write a C++ function, lastLargestIndex, that takes as parameters an int array and its size and returns the index of the last occurrence of the largest element in the array. To test your function, write a main that prompts a user for a list of 15 integers and outputs the index and value of the first occurrence of the largest value.

An example of the program is shown below:

Enter 15 integers: 
1
2
3
4
5
6
7
8
9
0
10
11
12
13
14
1 2 3 4 5 6 7 8 9 0 10 11 12 13 14 
The position of the first occurrence of the largest element in list is: 14
The largest element in list is: 14
You can use the following integer lists to test your code:

56, 34, 67, 54, 56, 87, 66, 92, 15, 32, 55, 54, 88, 92, 30
79, 26, 79, 87, 73, 44, 67, 46, 55, 13, 20, 20, 33, 42, 60
63, 1, 40, 81, 30, 11, 26, 44, 98, 1, 80, 98, 15, 3, 42
*/


#include <iostream>

using namespace std;
const int arraySize = 15;
int lastLargestIndex(int array[]);
int indexPosition(int array[]);
int main() {
    int array[arraySize];
    cout << "Please input 15 integers: " << endl;
    for (int i = 0; i < arraySize; i++) {
      cin >> array[i];
    }
    cout << "The position of the last occurrence of the largest element in list is: " << indexPosition(array) << endl;
    cout << "The largest element in list is: " << lastLargestIndex(array);
    return 0;
}
int lastLargestIndex(int array[]) {
  int largest = array[0];
  for (int i = 0; i < arraySize; i++) {
    if (array[i] > largest) {
      largest = array[i];
    }
  }
  return largest;
}
int indexPosition(int array[]) {
  int index = lastLargestIndex(array);
  for (int i = 14; i >= 0; i--) {
    if (array[i] == index) {
      return i;;
    }
  }
  return 0;
}
